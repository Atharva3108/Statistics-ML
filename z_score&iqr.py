# -*- coding: utf-8 -*-
"""Z-score&IQR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k_jG06wIx3tL6KPaoGUBW3FWSGayLfna

**Outliers in data **
A datapoint that is outside the overall distribution of dataset known as outliers

**How to identify the outliers**

1.Point that falls outside the 3rd standard deviation , we use z score

** Problems due to outliers**

1. Problem during statistical analysis
2. Giver us wrong mean , standard deviation 
Decreases the efficiency of model

**Ways to find outlier**

1. Box plot
2. z score 
3. Scatter Plot
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

dataset= [11,10,12,14,12,15,14,13,15,102,12,14,17,19,107, 10,13,12,10,3,4,66,7,8,9,9,94,3,2,21,12,12,555,14,12,108,12,566,600,11,14,13,55,96,88,15,10,15,12,10,55,9,56,11,3,1,14,13,15,10]

"""(1)  **Detecting outlier using Z score**

Formula  : z = (x-Mu)/SD


"""

outliers = []

def zscore_outlier(data):
  
  threshold = 3
  mean = np.mean(data)            #  Gives us mean
  std = np.std(data)             # Gives us stadard dev.


  for i in data:
    z_score = (i - mean)/std
    if np.abs(z_score) > threshold :           #  Checkes the absolute value with threshold (abs)
      outliers.append(i)
  return outliers

outlier_found = zscore_outlier(dataset)
outlier_found

"""**Using Inter Quantile Range**

1. arrange data in increasing order
2. Calculate the 1st and the 3rd Quantile Range and find (Q3 - Q1)
3. Find the lower bound i.e Q1 * 1.5 
4. Find upper nound Q3 * 1.5


"""

sorted(dataset)

quartile1,quartile3 = np.percentile(dataset,[25,75])

print (quartile1)

print (quartile3)

interqr = quartile3 - quartile1 
print (interqr)

Lower_bound = 1.5 * quartile1
Upper_Bound = 1.5 * quartile3

print (Lower_bound)
print (Upper_Bound)

